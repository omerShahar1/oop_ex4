@startuml
'https://plantuml.com/class-diagram


class Algo
class AdjListNode
class Graph
class Location
class Node
class Edge
class Agent
class Client
class Pokemon
class Game


Algo <|-- Graph
Graph <|-- Edge
Graph <|-- Node
Graph <|-- AdjListNode
Graph <|-- Location
Game <|-- Pokemon
Game <|-- Agent
Game <|-- Client
Game <|-- Algo
Game <|-- Location
Pokemon <|-- Location
Agent <|-- Location


class AdjListNode
{
    -int vertex;
    -double weight;
    +AdjListNode(int, double)
    +int getVertex()
    +double getWeight()
}

class Graph
{
    -HashMap<Integer, Node> nodes
    -HashMap<String, Edge> edges
    -int MC
    -HashMap<Integer, HashMap<Integer, Edge>> outEdges
    -HashMap<Integer, HashMap<Integer, Edge>> inEdges
    -HashMap<Integer, Integer> changes
    +Graph(String)
    +Node getNode(int)
    +Edge getEdge(int, int)
    +void addNode(Node)
    +void connect(int, int, double)
    +Iterator<Node> nodeIter()
    +Iterator<Edge> edgeIter()
    +Iterator<Edge> edgeIter(int node_id)
    +Node removeNode(int)
    +Edge removeEdge(int, int)
    +int nodeSize()
    +int edgeSize()
    +int getMC()
}

class Algo
{
    -Graph graph
    +Algo(String)
    +init(Graph)
    +double shortestPathDist(int, int)
    +LinkedList<Node> shortestPath(int, int)
    +LinkedList<Node> checkPath(HashMap<Integer, Integer>, int, int)
    +Node center()
    +double dijkstra(int, HashMap<Integer, ArrayList<AdjListNode>>)
}

class Edge
{
    -int src
    -int dest
    -double weight
    -String info
    -int tag
    +Edge(int, int, double
    +int getSrc()
    +int getDest()
    +double getWeight()
    +String getInfo()
    +void setInfo(String s)
    +int getTag()
    +void setTag(int t)
}

class Node
{
    -int id
    -double weight
    -Location location
    +Node(int, double, double, double)
    +int getKey()
    +Location getLocation()
    +void setLocation(Location)
    +double getWeight()
    +void setWeight(double)
}

class Location
{
    -double x
    -double y
    -double z
    +double x()
    +double y()
    +double z()
    +double distance(Location)
    +String toString()
}

class Agent
{
    -int id
    -double value
    -int src
    -int dest
    -double speed
    -Location pos
    -double TimeToNext
    +Agent(int, int, int, double, Location)
    +getId()
    +double getValue()
    +int getSrc()
    +void setSrc(int)
    +int getDest()
    +void setDest(int)
    +double getSpeed()
    +Location getPos()
    +void setPos(Location)
    +double getTimeToNext()
    +void setTimeToNext(double)
}


class Pokemon
{
    -double value
    -int type
    -Location pos
    -Edge edge
    +Pokemon(double, int, Location)
    +double getValue()
    +int getType()
    +Location getPos()
    +Edge getEdge()
    +void setEdge(Edge)
}

class Game
{
    -ArrayList<Pokemon> pokemons
    -HashMap<Integer, Agent> agents
    -Algo algo
    -final Client client
    -boolean stop_the_game
    +Game(Client)
    +boolean isStop_the_game()
    +void setStop_the_game(boolean)
    +Algo getAlgo()
    +ArrayList<Pokemon> getPokemons()
    +HashMap<Integer, Agent> getAgents()
    +void setGraph(String)
    +Client getClient()
    +void updateAgent(String)
    +updatePokemons(String)
    +Edge findEdgeOfPokemon(Location, int)
    +Agent chooseAgent(Pokemon)
    +void planNext()
}

@enduml